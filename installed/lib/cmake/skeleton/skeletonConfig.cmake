# See https://cmake.org/cmake/help/latest/guide/importing-exporting/index.html#exporting-targets
# for help

# This expands during substitution

####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######
####### Any changes to this file will be overwritten by the next CMake run ####
####### The input file was Config.cmake.in                            ########

get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../" ABSOLUTE)

macro(set_and_check _var _file)
  set(${_var} "${_file}")
  if(NOT EXISTS "${_file}")
    message(FATAL_ERROR "File or directory ${_file} referenced by variable ${_var} does not exist !")
  endif()
endmacro()

macro(check_required_components _NAME)
  foreach(comp ${${_NAME}_FIND_COMPONENTS})
    if(NOT ${_NAME}_${comp}_FOUND)
      if(${_NAME}_FIND_REQUIRED_${comp})
        set(${_NAME}_FOUND FALSE)
      endif()
    endif()
  endforeach()
endmacro()

####################################################################################

# If there are multiple components in this package and the
# user requests for some, we can check if they're supported
set(_skeleton_supported_components  )

foreach(_comp ${skeleton_FIND_COMPONENTS})
    if (NOT _comp IN_LIST _skeleton_supported_components)
        set(skeleton_FOUND False)
        set(skeleton_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/skeleton${_comp}Targets.cmake")
endforeach()

# This includes the autogenerated and installed exported targets file
include("${CMAKE_CURRENT_LIST_DIR}/skeletonTargets.cmake")

# Dependecies
# All PUBLIC REQUIRED dependencies of the library MUST also be included here

# This provides the find_dependecy macro
include(CMakeFindDependencyMacro)
find_dependency(spdlog 1.15.3)

# This should be the last call in this file
check_required_components(skeleton)
